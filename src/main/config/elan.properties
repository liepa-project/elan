##Preferred media players (first item is the default): 
##-on Windows: JDS, JMMF, JFX or VLCJ
##-on Mac:     AVFN, JFX or VLCJ
##-on Linux:   VLCJ or JFX
##Remove the '#' from the line to activate
#PreferredMediaFramework=JDS

## With the Java - DirectShow player, using native code to stop the player 
## at the end of a selection works best in most cases. But with mp3 files
## the player jumps to the end of a selection from arbitrary(?) points 
## halfway the selection. Native stop time can be switched off here.
#JDSPlayer.UseNativeStopTime=false

## With the Java - DirectShow player the first player sometimes does not
## become visible, depending on Windows and Java runtime version. An invisible
## player is created to circumvent this problem. This can be switched off by 
## setting this property to false. 
#JDSPlayer.CreateInitPlayerFrame=true

##On Windows DirectShow is used for most video formats except for mp4 and wmv
##which are handled by Microsoft Media Foundation. When this property is set to true,
##it forces the use of MMF for e.g. mpeg-1 and mpeg-2 files, instead of DirectShow.
#JMMFPlayer.ForceForAllFileTypes=true

##Debug mode for the Java-DirectShow media player (Windows)
JDSDebug=false

##Debug mode for the Java-Microsoft Media Foundation media player (Windows)
JMMFDebug=false

##A buffer at the end of the media to prevent an automatic jump to the begin of the media when
##the play head reaches the end. For the Java-Microsoft Media Foundation media player (Windows)
JMMFPlayer.EndOfMedia.NumberOfFramesBuffer=5

##After a video component has been added to a window, allow the player at least this amount
##of milliseconds to finish initialization before the video component may be removed from or 
##repositioned in that window's layout. (JMMF, Windows)  
#JMMFPlayer.MinimalInitTimeMS=500

##Option to use a java.awt.Canvas instead of a java.awt.Panel as 'host' layer
##for the native video renderer, default is false
#JMMFPlayer.UseCanvas=true

##Same for the JDS player, option to use a java.awt.Canvas instead of a java.awt.Panel
##as 'host' layer for the native video renderer, default is false
#JDSPlayer.UseCanvas=true

##The JAVFPlayer buffers a number of images of video frames in memory, the current default is
##set to the frames of 0.5 second. Increasing this value might require that ELAN is given more 
##memory, decreasing this value will result in more frequent calls to native decoding libraries
#JAVFPlayer.FrameBufferLengthMS=500

## On macOS using native code to stop the player at the end of a selection is suspected
## to lead to crashes. This is still to be confirmed.
#JAVFPlayer.UseNativeStopTime=false

##XML validation of .eaf is enabled by default, but loading of a (large) file
##is (much) faster with validation turned off 
ELAN.EAF.Validate=true

## By default the XML parser is namespace aware. With old EAF files this may lead to errors.
## Setting the property below to false may overcome this problem.
#ELAN.EAF.NamespaceAware=false

##On high resolution displays the font size of menu's, buttons, labels etc.
##can look small. With this scale factor the font can be enlarged (e.g. 2.0 means twice as large)
#ELAN.UI.FontScaleFactor=1.0

## A preferred font to use for the UI (menu items, buttons, labels etc.).
## Can be set e.g. when the default UI font doesn't support the chosen interface language 
#ELAN.UI.FontName=Arial Unicode MS

##On systems where ELAN is installed for the first time or where no font scaling preference 
##has been set yet, ELAN tries to detect high resolution displays and guess/calculate a 
##suitable font scaling factor. Default is true, can be set to false here but auto detection
##will be disabled too if a scaling factor other than 1.0 has been set.
#ELAN.UI.AutoDetectFontScaleFactor=false

## The default, global font to use for all tiers and annotations can not be set (yet) as a preference
## The preferred font name can be specified here
## Application default is: Arial Unicode MS
#ELAN.Tiers.DefaultFontName=Times New Roman

## The size of the default, global font to use for all tiers and annotations can not be set (yet) 
## as a preference. The size can be specified here.
## Application default is: 12
#ELAN.Tiers.DefaultFontSize=12

##If the records of a Toolbox text file contain time information but may not be in chronological order, 
##this setting attempts to sort the records first, before actual parsing
ToolboxParser.SortRecordsBeforeParsing=false

##The export to flextext by default allows the export of empty <item> elements.
##Successful import into FLEx might depend on having no empty <item> elements, 
##change this option to false in that case (and remove the #)
#FLExExport.ExportEmptyItems=true

## Custom folder for storing and loading ELAN lexicon xml files. Specify the absolute path.
## On Windows use forward slashes or double backslashes, e.g. C:/Temp or C:\\Temp
#LexiconComponent.LexiconFolder=C:/Temp/Lexic

## The AudioExtractor, which loads audio samples from video files for waveform visualization,
## by default loads the samples on the main thread. Setting this to true reduces the risk 
## of freezing of the user interface if loading enters an endless loop or a dead lock.
#AudioExtractor.LoadSamplesThreaded=false

## Disables loading of audio samples from video files using native frameworks.
## On macOS the native loading of samples can lead to freezing of the application
#AudioExtractor.UseNativeExtractor=false

## The loading of audio samples from video files, either uses a ByteBuffer or a byte array (byte[]).
## The method based on a ByteBuffer is suspected to be a possible cause of hard application crashes.
#AudioExtractor.UseByteArray=false

## The Web server URL to connect to annotation server
#AnnotationServer.URL=https://annorepo.dev.clariah.nl
#AnnotationServer.URL=http://localhost:8080